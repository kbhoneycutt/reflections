When would you want to use a remote repository rather than keeping all your work
local?

    One could argue if you have anything you want to save, you should use a remote 
    repository, because hard drives crash, laptops get stolen, etc.
    
    But in particular, you should use a remote repository in these situations:
    1. You may be editing the same code from two or more different computers.
    2. You have others collaborating with you on the same code.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    You would want to always pull changes manually because having Git automatically stay up-to-date with the remote repository may introduce changes you are unable to deal with.  You may be in the process of editing a file, or even have it staged to commit, and then Git downloads a change that is in conflict with your change. And for the work you are doing, you may need to have a constant state of what the master is. If git is pulling changes constantly to stay up-to-date, you may not be able to tell what the current state of the master is.

    If you are working on a project with many collaborators, your system could also wind up pulling down lots of changes frequently, thus chewing up local resources (bandwidth, CPU time, disk I/O time, etc.) that you really need for the work you are doing.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fill in your answer here

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
